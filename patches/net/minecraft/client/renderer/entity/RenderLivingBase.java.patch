--- a/net/minecraft/client/renderer/entity/RenderLivingBase.java
+++ b/net/minecraft/client/renderer/entity/RenderLivingBase.java
@@ -1,8 +1,11 @@
 package net.minecraft.client.renderer.entity;
 
 import com.google.common.collect.Lists;
+import com.mtbs3d.minecrift.render.PlayerModelController;
+
 import java.nio.FloatBuffer;
 import java.util.List;
+import java.util.UUID;
 import java.util.function.Consumer;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.entity.EntityPlayerSP;
@@ -11,6 +14,7 @@
 import net.minecraft.client.renderer.OpenGlHelper;
 import net.minecraft.client.renderer.entity.layers.LayerRenderer;
 import net.minecraft.client.renderer.entity.model.ModelBase;
+import net.minecraft.client.renderer.entity.model.ModelPlayerVR;
 import net.minecraft.client.renderer.entity.model.ModelSpider;
 import net.minecraft.client.renderer.texture.DynamicTexture;
 import net.minecraft.entity.EntityLivingBase;
@@ -20,6 +24,7 @@
 import net.minecraft.src.Config;
 import net.minecraft.util.Util;
 import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.math.Vec3d;
 import net.minecraft.util.text.TextFormatting;
 import net.optifine.EmissiveTextures;
 import net.optifine.entity.model.CustomEntityModels;
@@ -163,6 +168,28 @@
                 float f7 = entity.prevRotationPitch + (entity.rotationPitch - entity.prevRotationPitch) * partialTicks;
                 this.renderLivingAt(entity, x, y, z);
                 float f8 = this.handleRotationFloat(entity, partialTicks);
+                
+                //VIVECRAFT
+                if(this.mainModel instanceof ModelPlayerVR && entity instanceof EntityPlayer){
+                	UUID uuid = entity.getUniqueID();
+                	ModelPlayerVR mp = (ModelPlayerVR) mainModel;
+                	double d3 = entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * (double)partialTicks;
+                	double d4 = entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * (double)partialTicks;
+                	double d5 = entity.lastTickPosZ + (entity.posZ - entity.lastTickPosZ) * (double)partialTicks;
+                	mp.renderPos = new Vec3d(d3, d4, d5);
+                	if(PlayerModelController.getInstance().isTracked(uuid)){
+                		PlayerModelController.RotInfo rotInfo=PlayerModelController.getInstance().getRotationsForPlayer(uuid);	
+                		Vec3d diff = rotInfo.leftArmPos.subtract(rotInfo.rightArmPos).rotateYaw((float)-Math.PI/2);
+                		if(rotInfo.reverse) diff = diff.scale(-1);
+                		if(rotInfo.seated) diff = rotInfo.rightArmRot;
+                		double ltor = Math.atan2(-diff.x, diff.z);  
+                		f = (float) Math.toDegrees(ltor);
+                	}
+                }
+
+                float wasyaw = entity.rotationYaw;
+                //
+                
                 this.applyRotations(entity, f8, f, partialTicks);
                 float f4 = this.prepareScale(entity, partialTicks);
                 float f5 = 0.0F;
