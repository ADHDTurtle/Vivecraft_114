--- a/net/minecraft/client/GameSettings.java
+++ b/net/minecraft/client/GameSettings.java
@@ -23,6 +23,9 @@
 import java.util.Map;
 import java.util.Set;
 import javax.annotation.Nullable;
+
+import org.vivecraft.provider.MCOpenVR;
+
 import net.minecraft.client.gui.GuiNewChat;
 import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.renderer.OpenGlHelper;
@@ -109,7 +112,7 @@
     public boolean fullScreen;
     @Nullable
     public String fullscreenResolution;
-    public boolean enableVsync = true;
+    public boolean enableVsync = false;
     public boolean useVbo = true;
     public boolean reducedDebugInfo;
     public boolean hideServerAddress;
@@ -139,8 +142,8 @@
     public boolean enableWeakAttacks;
     public boolean showSubtitles;
     public boolean realmsNotifications = true;
-    public boolean autoJump = true;
-    public TutorialSteps tutorialStep = TutorialSteps.MOVEMENT;
+    public boolean autoJump = false;
+    public TutorialSteps tutorialStep = TutorialSteps.NONE; // VIVECRAFT: Real men don't need tutorials.
     public boolean autoSuggestions = true;
     public int biomeBlendRadius = 2;
     public double mouseWheelSensitivity = 1.0D;
@@ -248,7 +251,7 @@
     public int ofTranslucentBlocks = 0;
     public boolean ofDynamicFov = true;
     public boolean ofAlternateBlocks = true;
-    public int ofDynamicLights = 3;
+    public int ofDynamicLights = 2;
     public boolean ofCustomEntityModels = true;
     public boolean ofCustomGuis = true;
     public boolean ofShowGlErrors = true;
@@ -294,6 +297,7 @@
     {
         this.setForgeKeybindProperties();
         this.keyBindings = (KeyBinding[])ArrayUtils.addAll(new KeyBinding[] {this.keyBindAttack, this.keyBindUseItem, this.keyBindForward, this.keyBindLeft, this.keyBindBack, this.keyBindRight, this.keyBindJump, this.keyBindSneak, this.keyBindSprint, this.keyBindDrop, this.keyBindInventory, this.keyBindChat, this.keyBindPlayerList, this.keyBindPickBlock, this.keyBindCommand, this.keyBindScreenshot, this.keyBindTogglePerspective, this.keyBindSmoothCamera, this.keyBindFullscreen, this.keyBindSpectatorOutlines, this.keyBindSwapHands, this.keyBindSaveToolbar, this.keyBindLoadToolbar, this.keyBindAdvancements}, this.keyBindsHotbar);
+        this.keyBindings = MCOpenVR.initializeBindings(this.keyBindings);
         this.difficulty = EnumDifficulty.NORMAL;
         this.lastServer = "";
         this.fovSetting = 70.0D;
@@ -336,6 +340,7 @@
     {
         this.setForgeKeybindProperties();
         this.keyBindings = (KeyBinding[])ArrayUtils.addAll(new KeyBinding[] {this.keyBindAttack, this.keyBindUseItem, this.keyBindForward, this.keyBindLeft, this.keyBindBack, this.keyBindRight, this.keyBindJump, this.keyBindSneak, this.keyBindSprint, this.keyBindDrop, this.keyBindInventory, this.keyBindChat, this.keyBindPlayerList, this.keyBindPickBlock, this.keyBindCommand, this.keyBindScreenshot, this.keyBindTogglePerspective, this.keyBindSmoothCamera, this.keyBindFullscreen, this.keyBindSpectatorOutlines, this.keyBindSwapHands, this.keyBindSaveToolbar, this.keyBindLoadToolbar, this.keyBindAdvancements}, this.keyBindsHotbar);
+        this.keyBindings = MCOpenVR.initializeBindings(this.keyBindings);
         this.difficulty = EnumDifficulty.NORMAL;
         this.lastServer = "";
         this.fovSetting = 70.0D;
@@ -498,7 +503,7 @@
 
         if (settingsOption == GameSettings.Options.FBO_ENABLE)
         {
-            this.fboEnable = !this.fboEnable;
+            this.fboEnable = true;//vivecraft !this.fboEnable;
         }
 
         if (settingsOption == GameSettings.Options.GRAPHICS)
@@ -562,7 +567,7 @@
 
         if (settingsOption == GameSettings.Options.USE_VBO)
         {
-            this.useVbo = !this.useVbo;
+            this.useVbo = !this.useVbo; //TODO: Evaulate if we should override this still.
             this.mc.renderGlobal.loadRenderers();
         }
 
@@ -837,13 +842,21 @@
                 }
                 else if (settingOption == GameSettings.Options.GAMMA)
                 {
-                    if (d0 == 0.0D)
+                    if (Math.abs(d0 - 1D / 3D) < 0.005)
                     {
                         return s1 + I18n.format("options.gamma.min");
                     }
+                    else if (d0 == 1.0D)
+                    {
+                        return s1 + I18n.format("options.gamma.max");
+                    }
+                    else if (d0 == 0.0D)
+                    {
+                        return s1 + I18n.format("I Can't See");
+                    }
                     else
                     {
-                        return d0 == 1.0D ? s1 + I18n.format("options.gamma.max") : s1 + "+" + (int)(d0 * 100.0D) + "%";
+                        return s1 + (d0 >= 1D / 3D ? "+" : "") + (int)((d0 * 1.5 - 0.5) * 100.0D) + "%";
                     }
                 }
                 else if (settingOption == GameSettings.Options.SATURATION)
@@ -1667,7 +1680,7 @@
             {
                 if (i >= aint[j])
                 {
-                    this.ofAaLevel = aint[j];
+                    this.ofAaLevel = 0; //Vivecraft aint[j];
                 }
             }
 
@@ -2116,7 +2129,7 @@
                 return;
             }
 
-            this.ofFastRender = !this.ofFastRender;
+            this.ofFastRender = false; //Vivecraft !this.ofFastRender;
 
             if (this.ofFastRender)
             {
@@ -3210,6 +3223,13 @@
             KeyUtils.fixKeyConflicts(this.keyBindings, new KeyBinding[] {this.ofKeyBindZoom});
             KeyBinding.resetKeyBindingArrayAndHash();
             bufferedreader.close();
+            
+            //Vivecraft important.
+            this.ofFastRender = false;
+            this.fboEnable = true;
+            this.ofAaLevel = 0;
+            //
+            
         }
         catch (Exception exception11)
         {
@@ -3578,7 +3598,7 @@
         INVERT_MOUSE("options.invertMouse", false, true),
         SENSITIVITY("options.sensitivity", true, false),
         FOV("options.fov", true, false, 30.0D, 110.0D, 1.0F),
-        GAMMA("options.gamma", true, false),
+        GAMMA("options.gamma", true, false, -0.5F, 1.0F, 0.0F),
         SATURATION("options.saturation", true, false),
         RENDER_DISTANCE("options.renderDistance", true, false, 2.0D, 16.0D, 1.0F),
         VIEW_BOBBING("options.viewBobbing", false, true),
