--- a/net/minecraft/entity/projectile/EntityThrowable.java
+++ b/net/minecraft/entity/projectile/EntityThrowable.java
@@ -3,6 +3,10 @@
 import java.util.List;
 import java.util.UUID;
 import javax.annotation.Nullable;
+
+import com.mtbs3d.minecrift.api.NetworkHelper;
+import com.mtbs3d.minecrift.api.VivePlayer;
+
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.EntityType;
@@ -52,6 +56,16 @@
         this(type, p_i48542_2_.posX, p_i48542_2_.posY + (double)p_i48542_2_.getEyeHeight() - 0.10000000149011612D, p_i48542_2_.posZ, p_i48542_3_);
         this.thrower = p_i48542_2_;
         this.field_200218_h = p_i48542_2_.getUniqueID();
+
+       	//VIVE SET SPAWNPOS
+        VivePlayer vp = NetworkHelper.vivePlayers.get(thrower.getUniqueID());
+        if (vp !=null && vp.isVR())
+        {
+	        Vec3d aimSource = vp.getControllerPos(0);
+	        Vec3d aimDir = vp.getControllerDir(0).scale(0.6f);
+    		this.setPosition(aimSource.x + aimDir.x ,aimSource.y + aimDir.y ,aimSource.z+aimDir.z );
+        } 
+        ///
     }
 
     protected void registerData()
@@ -79,6 +93,17 @@
      */
     public void shoot(Entity entityThrower, float rotationPitchIn, float rotationYawIn, float pitchOffset, float velocity, float inaccuracy)
     {
+    	//VIVE USE CONTROLLER
+        VivePlayer vp = NetworkHelper.vivePlayers.get(thrower.getUniqueID());
+        if (vp !=null && vp.isVR())
+        {
+        	Vec3d aim = vp.getControllerDir(0);
+        	rotationPitchIn = -(float)Math.toDegrees(Math.asin(aim.y/aim.length()));
+			rotationYawIn = (float)Math.toDegrees(Math.atan2(-aim.x, aim.z));   		
+        	}
+        //END VIVE
+
+        
         float f = -MathHelper.sin(rotationYawIn * 0.017453292F) * MathHelper.cos(rotationPitchIn * 0.017453292F);
         float f1 = -MathHelper.sin((rotationPitchIn + pitchOffset) * 0.017453292F);
         float f2 = MathHelper.cos(rotationYawIn * 0.017453292F) * MathHelper.cos(rotationPitchIn * 0.017453292F);
