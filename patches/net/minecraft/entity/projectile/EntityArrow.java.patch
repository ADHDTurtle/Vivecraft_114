--- a/net/minecraft/entity/projectile/EntityArrow.java
+++ b/net/minecraft/entity/projectile/EntityArrow.java
@@ -5,6 +5,10 @@
 import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import org.vivecraft.api.NetworkHelper;
+import org.vivecraft.api.VivePlayer;
+
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.Entity;
@@ -83,13 +87,23 @@
         this.setPosition(p_i48547_2_, p_i48547_4_, p_i48547_6_);
     }
 
-    protected EntityArrow(EntityType<?> p_i48548_1_, EntityLivingBase p_i48548_2_, World p_i48548_3_)
+    protected EntityArrow(EntityType<?> p_i48548_1_, EntityLivingBase shooter, World p_i48548_3_)
     {
-        this(p_i48548_1_, p_i48548_2_.posX, p_i48548_2_.posY + (double)p_i48548_2_.getEyeHeight() - 0.10000000149011612D, p_i48548_2_.posZ, p_i48548_3_);
-        this.setShootingEntity(p_i48548_2_);
+        this(p_i48548_1_, shooter.posX, shooter.posY + (double)shooter.getEyeHeight() - 0.10000000149011612D, shooter.posZ, p_i48548_3_);
+        this.setShootingEntity(shooter);
 
-        if (p_i48548_2_ instanceof EntityPlayer)
+        if (shooter instanceof EntityPlayer)
+ 
         {
+        	VivePlayer vp = NetworkHelper.vivePlayers.get(shooter.getUniqueID());
+        	if (vp !=null && vp.isVR())
+        	{
+        		//VIVE SET SPAWNPOS
+    	        Vec3d aimSource = (vp.isSeated() || vp.getDraw()==0) ? vp.getControllerPos(0): vp.getControllerPos(1);
+    	        Vec3d aimDir = getVRAim(vp).scale(0.6f);
+        		this.setPosition(aimSource.x + aimDir.x ,aimSource.y + aimDir.y ,aimSource.z+aimDir.z );
+        		//
+        	}
             this.pickupStatus = EntityArrow.PickupStatus.ALLOWED;
         }
     }
@@ -115,9 +129,29 @@
         this.dataManager.register(CRITICAL, (byte)0);
         this.dataManager.register(field_501047_a, Optional.empty());
     }
-
+    public Vec3d getVRAim(VivePlayer vp){
+		Vec3d aim = vp.getControllerDir(0);
+    	if(!vp.isSeated() && vp.getDraw() > 0){
+    		aim = vp.getControllerPos(1).subtract(vp.getControllerPos(0)).normalize();
+    	}
+    	return aim;
+    }
     public void shoot(Entity shooter, float pitch, float yaw, float p_184547_4_, float velocity, float inaccuracy)
     {
+
+    	//VIVE SET AIM AND SPEED
+        VivePlayer vp = NetworkHelper.vivePlayers.get(shooter.getUniqueID());
+        if (vp !=null && vp.isVR())
+        { 
+    		Vec3d aim = getVRAim(vp);
+        	if(!vp.isSeated() && vp.getDraw() > 0){
+        		velocity = velocity * vp.getDraw();  
+        		this.damage *= 2;
+        	}
+			pitch = -(float)Math.toDegrees(Math.asin(aim.y/aim.length()));
+			yaw = (float)Math.toDegrees(Math.atan2(-aim.x, aim.z));   		
+        }
+        ///
         float f = -MathHelper.sin(yaw * 0.017453292F) * MathHelper.cos(pitch * 0.017453292F);
         float f1 = -MathHelper.sin(pitch * 0.017453292F);
         float f2 = MathHelper.cos(yaw * 0.017453292F) * MathHelper.cos(pitch * 0.017453292F);
