--- a/net/minecraft/resources/VanillaPack.java
+++ b/net/minecraft/resources/VanillaPack.java
@@ -32,6 +32,8 @@
 import net.minecraft.util.Util;
 import net.optifine.reflect.Reflector;
 import net.optifine.reflect.ReflectorForge;
+
+import org.apache.commons.io.IOUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -290,35 +292,40 @@
 
     public boolean resourceExists(ResourcePackType type, ResourceLocation location)
     {
-        String s = func_223458_d(type, location);
-        InputStream inputstream = ReflectorForge.getOptiFineResourceStream(s);
-
-        if (inputstream != null)
-        {
-            return true;
-        }
-        else
-        {
-            if (basePath != null)
-            {
-                Path path = basePath.resolve(type.getDirectoryName() + "/" + location.getNamespace() + "/" + location.getPath());
+    	String s = func_223458_d(type, location);
+    	InputStream inputstream = ReflectorForge.getOptiFineResourceStream(s);
 
-                if (Files.exists(path))
-                {
-                    return true;
-                }
-            }
-
-            try
-            {
-                URL url = VanillaPack.class.getResource(s);
-                return func_223459_a(s, url);
-            }
-            catch (IOException var6)
-            {
-                return false;
-            }
-        }
+    	if (inputstream != null)
+    	{
+    		return true;
+    	}
+    	else
+    	{
+    		if (basePath != null)
+    		{
+    			Path path = basePath.resolve(type.getDirectoryName() + "/" + location.getNamespace() + "/" + location.getPath());
+
+    			if (Files.exists(path))
+    			{
+    				return true;
+    			}
+    		}
+
+    		try
+    		{
+    			URL url = VanillaPack.class.getResource(s);
+    			boolean flag = func_223459_a(s, url);
+    			if (!flag) throw new IOException();
+    			return flag;
+    		}
+    		catch (IOException var51)
+    		{
+    			InputStream IS = this.getInputStreamVanilla(type, location);
+    			boolean flag = IS != null;
+    			IOUtils.closeQuietly(IS);
+    			return flag;
+    		}
+    	}
     }
 
     public Set<String> getResourceNamespaces(ResourcePackType type)
